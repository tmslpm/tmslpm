#!/bin/bash

updateWorkspaceVariable() {
  workspace_current=$(terraform -chdir="$PATH_TERRAFORM_DIR" workspace show)
  local pwdName="$(basename "$PATH_PWD")"
  logPrfx="$(tput setaf 228)> $(tput setaf 42) $pwdName/${PATH_TERRAFORM_DIR#*/$pwdName/} $(tput setaf 45)($workspace_current)$(tput sgr0):"
  local workspace_list=$(terraform -chdir="$PATH_TERRAFORM_DIR" workspace list | sed 's/^[* ]*//' | tr '\n' ' ')
  local workspace_index=0
  local divider=" -----+---------------------------------------------------------\n"
  workspace_menu="\n"
  ## action [key: 0-9] select workspace
  for v in $workspace_list; do
    workspace_array[workspace_index]=$v
    workspace_menu+="$(printf "   $(tput setaf 228)%s$(tput sgr0)  | $(tput setaf 75)%s $(tput setaf 45)\"%s\"$(tput sgr0)" "$workspace_index" "select workspace" "${workspace_array[workspace_index]}")\n$divider"
    workspace_index=$((workspace_index + 1))
  done
  ## action [key: d] deploy current workspace
  workspace_menu+="$(printf "   $(tput setaf 228)%s$(tput sgr0)  | $(tput setaf 75)%s$(tput sgr0)" "d" "deploy: run plan and apply")\n$divider"
  ## action [key: u] upgrade current workspace
  workspace_menu+="$(printf "   $(tput setaf 228)%s$(tput sgr0)  | $(tput setaf 75)%s$(tput sgr0)" "u" "upgrade: get module and upgrade")\n$divider"
  ## action [key: e] exit
  workspace_menu+="$(printf "   $(tput setaf 228)%s$(tput sgr0)  | $(tput setaf 75)%s$(tput sgr0)" "e" "exit: stop the script")\n\n"
}

if [[ -z "$CTX" ]]; then
  declare -r CTX=true
  declare -r PATH_PWD="$(pwd)"
  declare -r PATH_TERRAFORM_DIR="$PATH_PWD/.terraform"
  declare -r PATH_RUN_SCRIPT="$PATH_PWD/run"
  declare -a workspace_array=()
  declare workspace_current="?"
  declare workspace_menu="workspace menu not initialized"
  declare logPrfx="$(tput setaf 228)>$(tput sgr0)"
  updateWorkspaceVariable
  printf "$logPrfx %s \n" "starting terraform turbo script 3000"
fi

deploy() {
  printf "$logPrfx %s \n" "deploying terraform"
  terraform -chdir="$PATH_TERRAFORM_DIR" plan
  terraform -chdir="$PATH_TERRAFORM_DIR" apply
  source "$PATH_RUN_SCRIPT"
}

uprade() {
  printf "$logPrfx %s \n" "updating terraform module"
  terraform -chdir="$PATH_TERRAFORM_DIR" get
  terraform -chdir="$PATH_TERRAFORM_DIR" init -upgrade
  source "$PATH_RUN_SCRIPT"
}

switchWorkspace() {
  if [[ -z "$1" ]]; then
    printf "$logPrfx $(tput setaf 1)%s $(tput setaf 228)%s$(tput sgr0)\n" "error, invalid workspace index" "$2"
  else
    printf "$logPrfx %s \n" "selecting terraform workspace"
    terraform -chdir="$PATH_TERRAFORM_DIR" workspace select $1
    updateWorkspaceVariable
  fi
  source "$PATH_RUN_SCRIPT"
}

main() {
  printf "$logPrfx %s \n$workspace_menu" "choose an action"
  while true; do
    read -p "$logPrfx enter your choice: " choice
    if [[ "$choice" =~ ^[0-9]+$ ]]; then
      switchWorkspace "${workspace_array[choice]}" "$choice" && break
    fi
    case "$choice" in
    d) deploy && break ;;
    u) uprade && break ;;
    e) printf "$logPrfx %s\n" "bye!" && exit 0 ;;
    esac
    unset choice
    printf "$logPrfx $(tput setaf 1)%s$(tput sgr0)\n" "error, invalid choice"
  done
}
main
